@page "/leads"
@using System
@using System.Linq
@using TableModels
@using static MudBlazor.CategoryTypes
@inject MudBlazor.ISnackbar snackBar
@inject IDialogService DialogueService
@inject IJSRuntime JsRuntime



<MudText Typo="Typo.h4">Leads</MudText>
          
<MudTable RowsPerPage="12" @ref="@_table" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info"
          Style="color: white" Elevation="25" Items="GetAll()" Filter="(lead) => Search(lead.StoreNumber)" @bind-lead="lead">

    <ToolBarContent>
        <MudText Typo="Typo.h6">Leads</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="storeNumber" Placeholder="Search by Store Number" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.DateContacted)">Date Contacted</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.Category)">Category</MudTableSortLabel>
        </MudTh>
        <MudTh>            
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.FirstName)">First Name</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.LastName)">LastName</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.StoreNumber)">Store Number</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.Status)">Status</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.QueryRan)">Query Ran</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T="TableModels.Leads" InitialDirection="SortDirection.Ascending" SortBy="(System.Func<TableModels.Leads, object>)(x => x.PersonContacted)">Person Contacted</MudTableSortLabel>
        </MudTh>
        
        
        <MudTh> Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Lead  Info">@context.DateContacted?.ToShortDateString()</MudTd>
        <MudTd DataLabel="Lead Info">@context.Category</MudTd>
        <MudTd DataLabel="Lead  Info">@context.FirstName</MudTd>
        <MudTd DataLabel="Lead  Info">@context.LastName</MudTd>
        <MudTd DataLabel="Lead  Info">@context.StoreNumber</MudTd>
        <MudTd DataLabel="Lead  Info">@context.Status</MudTd>
        <MudTd DataLabel="Lead Info">@context.QueryRan</MudTd>
        <MudTd DataLabel="Lead  Info">@context.PersonContacted</MudTd>
        <MudTd DataLabel="Actions">
            <MudFab OnClick="@(()=>Update(context))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small"></MudFab>
            <MudFab OnClick="@(()=>Delete(context))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small"></MudFab>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudPagination ShowFirstButton="true" ShowLastButton="true" SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Class="pa-4" />
    </PagerContent>
</MudTable>

<br/>

<!--Add/Edit POC-->
<MudCard Elevation="25"> 
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add/Edit Lead</MudText>            
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <EditForm OnValidSubmit="Add" OnInvalidSubmit='()=>snackBar.Add("Provide a name",Severity.Warning)' Model="@lead">
            <MudGrid>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.DateContacted" Placeholder="mm/dd/yyyy" Format="MM/dd/yyyy" Label="Date Contacted POC" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.Category" Label="Internal or External" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.FirstName" Label="First Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.LastName" Label="Last Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.StoreNumber" Label="Store Number" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.Status" Label="Actionable or In Question" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.PersonContacted" Label="Person Contacted" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="4" md="6">
                    <MudTextField @bind-Value="lead.QueryRan" Label="Query Ran" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                </MudItem>                
            </MudGrid>
            <br/>
            <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="Add">Add/Edit Lead</MudButton>
        </EditForm>
    </MudCardContent>
</MudCard>


@code {
    private int storeNumber = 0;
    
    private TableModels.Leads lead = new TableModels.Leads();
    private List<TableModels.Leads> leads = new List<TableModels.Leads>();
    private MudTable<TableModels.Leads> _table;

    protected override async Task OnInitializedAsync()
    {
        leads = leadsService.GetAll();
    }

    private bool Search(int storeNumber)
    {
        if (lead.StoreNumber == 0)
        {
            return true;
        }
        if ( lead.StoreNumber == storeNumber)
        {
            return true;
        }
        return false;
    }

    private List<TableModels.Leads> GetAll()
    {
        leads = leadsService.GetAll();
        return leads;
    }

    private void Add()
    {
        if(lead.Id == 0)
        {
            leadsService.Add(lead);            
        }
        else
        {
            leadsService.Update(lead);
        }
        lead = new TableModels.Leads();
        snackBar.Add("Lead successfully updated", Severity.Success);
        GetAll();
    }

    private void Update(TableModels.Leads record)
    {
        lead = record;
        StateHasChanged();
    }

    private async Task Delete(TableModels.Leads record)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            leadsService.Delete(record);
            snackBar.Add("Point of Contact Deleted!", Severity.Success);
            GetAll();
        }
    }

   private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }

}
